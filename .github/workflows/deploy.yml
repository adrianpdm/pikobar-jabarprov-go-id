name: Deploy
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]
jobs:
  deploy:
    runs-on: ubuntu-16.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Get last deployment timestamp on Netlify
      uses: fjogeleit/http-request-action@master
      id: lastDeployment
      with:
        url: 'https://api.netlify.com/api/v1/sites/${{ secrets.NETLIFY_SITE_ID }}'
        method: 'GET'
        customHeaders: '{"User-Agent":"${{ secrets.NETLIFY_SITE_ID }} (${{ secrets.NETLIFY_USER_EMAIL }})","Authorization":"Bearer ${{ secrets.NETLIFY_ACCESS_TOKEN }}","Accept":"application/json"}'
    - name: Set last deployment timestamp as env variable
      env:
        PUBLISHED_DEPLOY: ${{ steps.lastDeployment.outputs.response.published_deploy }} 
      run: |
        if [ -z "$PUBLISHED_DEPLOY" ]
        then
          echo "LAST_DEPLOY=-1" >> $GITHUB_ENV
        else
          echo "LAST_DEPLOY=${{ steps.lastDeployment.outputs.response.published_deploy.published_at }}" >> $GITHUB_ENV
        fi
    - name: Check firebase credentials
      env:
        FIREBASE_SDK_CONFIG: ${{ secrets.FIREBASE_SDK_CONFIG }}
        FIREBASE_ADMIN_CONFIG: ${{ secrets.FIREBASE_ADMIN_CONFIG }}
      run: |
        if [ -z "$FIREBASE_SDK_CONFIG"]
        then
          echo "firebase sdk config is nil"
        else
          echo "firebase sdk config is set"
        fi
        if [ -z "$FIREBASE_ADMIN_CONFIG"]
        then
          echo "firebase admin config is nil"
        else
          echo "firebase admin config is set"
        fi
    - name: Cache node modules
      if: ${{ false }}
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - name: Install Dependencies
      if: ${{ false }}
      run: npm install
    